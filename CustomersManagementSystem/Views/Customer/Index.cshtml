@model PagedList<CustomersManagementSystem.ViewModels.CustomerViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Customers</h1>
<br />
<p>
    <a asp-action="Create" class="btn btn-sm btn-primary">Add Customer</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find : <input type="text" name="searchQuery" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>         
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
          
            <th>
                @Html.ActionLink("Customer Name", "Index",  new { sortOrder = "Name"})
            </th>
            
            <th>
                @Html.ActionLink("Address", "Index",  new { sortOrder = "Address"})
            </th>

            <th>
                <a> Phone</a>

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.HasNext ? "disabled" : "";
}


@*<nav>
    @Html.PagedListPager(Model, pageNumber => Url.Action("index", new { pageNumber = pageNumber }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</nav>
*@
<br />
<a asp-action="ExportExcel" asp-route-customers="@Model" class="btn btn-sm btn-success">Export to Excel</a>

@*<form asp-action="ExportExcel" asp-route-customers="@Model."
      onsubmit="return exportToExcel(this)" class="d-inline">
    <input type="submit" value="Export" class="btn btn-sm btn-success" />
</form>*@
<script>
    function exportToExcel() {
        var customers = @Html.Raw(Json.Serialize(Model.ToList()));

        $.ajax({
            url: '@Url.Action("ExportExcel", "Customer")',
            type: 'POST',
            data: JSON.stringify({ customers: customers }),
            contentType: 'application/json',
            success: function (result) {
                // Handle success response
            },
            error: function (error) {
                // Handle error response
            }
        });
    }
</script>
